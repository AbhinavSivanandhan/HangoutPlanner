<% layout('layouts/boilerplate')%>
<link rel="stylesheet" href="/styles/stars.css">
<script>
  const mapToken = '<%-process.env.MAPBOX_TOKEN%>';
  const occasion = <%- JSON.stringify(occasion) %>
</script>
<div class="row">
    <div class="col-6">
      <div id='map' style='width: 400px; height: 300px;'></div>
      <div id="occasionCarousel" class="carousel slide" data-bs-ride="carousel">
        <div class="carousel-inner">
           <% occasion.images.forEach((img, i) => { %>
            <div class="carousel-item <%= i === 0 ? 'active' : ''%>">
              <img src="<%=img.url%>" class="d-block w-100" alt="">
            </div>
          <% }) %> 
        </div>
         <% if(occasion.images.length > 1) { %> 
        <a class="carousel-control-prev" href="#occasionCarousel" role="button" data-bs-slide="prev">
          <span class="carousel-control-prev-icon" aria-hidden="true"></span>
          <span class="sr-only">Previous</span>
        </a>
        <a class="carousel-control-next" href="#occasionCarousel" role="button" data-bs-slide="next">
          <span class="carousel-control-next-icon" aria-hidden="true"></span>
          <span class="sr-only">Next</span>
        </a>
         <% } %> 
      </div>
        <div class="card mb-3">
            <!-- <img src="<%= occasion.image%>" class="card-img-top" alt="..."> -->
             <!-- <% for(let img of occasion.images) { %>
              <img src="<%= img.url%>" class="card-img-top" alt="...">
            <% } %>  -->
            <div class="card-body">
                <h5 class="card-title"><%= occasion.title%></h5>
                <p class="card-text"><%= occasion.location%></p>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item text-muted"><%= occasion.description%>. Priced at $<%= occasion.price%>/person</li>
                <li class="list-group-item"><%= occasion.participants%></li>
                <li class="list-group-item">Submitted by <%= occasion.author.username %></li>
                <li class="list-group-item">From <%= occasion.startDate%> to <%= occasion.endDate%></li>
            </ul>
            <% if(currentUser && occasion.author.equals(currentUser._id)) {%>
            <div class="card-body">
                <a class="card-link btn btn-info" href="/occasions/<%=occasion._id%>/edit">Edit</a>
                <form class="d-inline" action="/occasions/<%=occasion._id%>?_method=DELETE" method="POST">
                    <button class="btn btn-danger">Delete</button>
                </form>
            </div>
            <% } %>
            <div class="card-footer text-muted">
                2 days ago
            </div>
        </div>

    </div>
    <div class="col-6">
      <% if(currentUser){ %>
        <h2>Leave a Review</h2>
        <form action="/occasions/<%=occasion._id%>/reviews" method="POST" class="mb-3 validated-form" novalidate>
            <!-- <div class="mb-3">
                <label class="form-label" for="rating">Rating</label>
                <input class="form-range" type="range" min="1" max="5" name="review[rating]" id="rating">
            </div> -->
            <div class="mb-3">
            <fieldset class="starability-basic">
              <legend>First rating:</legend>
              <input type="radio" id="no-rate" class="input-no-rate" name="review[rating]" value="0" checked aria-label="No rating." />
              <input type="radio" id="first-rate1" name="review[rating]" value="1" />
              <label for="first-rate1" title="Terrible">1 star</label>
              <input type="radio" id="first-rate2" name="review[rating]" value="2" />
              <label for="first-rate2" title="Not good">2 stars</label>
              <input type="radio" id="first-rate3" name="review[rating]" value="3" />
              <label for="first-rate3" title="Average">3 stars</label>
              <input type="radio" id="first-rate4" name="review[rating]" value="4" />
              <label for="first-rate4" title="Very good">4 stars</label>
              <input type="radio" id="first-rate5" name="review[rating]" value="5" />
              <label for="first-rate5" title="Amazing">5 stars</label>
            </fieldset>
            </div>
            <div class="mb-3">
                <label class="form-label" for="body">Review Text</label>
                <textarea class="form-control" name="review[body]" id="body" cols="30" rows="3" required></textarea>
                <div class="valid-feedback">
                    Looks good!
                </div>
            </div>
            <button class="btn btn-success">Submit</button>
        </form>
        <% } %>
        <div class="card mb-1">
            <!-- tags come here -->
            <div class="container">
                <!--<form action="/occasions/<%=occasion._id%>/tags" method="POST">  class="mb-3 validated-form" novalidate> -->
                <div class="tag-container">
                   <input class="form-control" type="text" id="tagList" />
                </div>
                <button id="tagButton" class="btn btn-success" onclick="sendTaglist()">Tag it!</button>

                <!-- </form> -->
            </div>
            <div id="tagAlert" class="alert alert-success alert-dismissible fade show d-none" role="alert">
              Tagged!
              <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        </div>
        <% for(let review of occasion.reviews) { %>
        <div class="card mb-3 ">
            <div class="card-body">
                <h5 class="card-title"><%=review.author.username%></h5> 
                <p class="starability-result" data-rating="<%=review.rating%>">
                  Rated: <%= review.rating %> stars
                </p>
                <!-- <h6 class=""card-substitle mb-2 text-muted">By <%= review.author.username%></h6> -->
                <p class="card-text">Review: <%= review.body %></p>
                <% if(currentUser && review.author.equals(currentUser._id)) {%>
                <form action="/occasions/<%=occasion._id%>/reviews/<%=review._id%>?_method=DELETE" method="POST">
                  <button class="btn btn-sm btn-danger">Delete</button>
                </form>
              <% } %>
            </div>
        </div>
        <% } %>
    </div>
</div>
<script src="/scripts/showPage.js"></script>
<!-- ejs code won't run in this script tag directly -->
<script>
  const tagContainer = document.querySelector('.tag-container');

  const input = document.querySelector('.tag-container input');

  var tags = [];

 function createTag(label){
    const div = document.createElement('div');
    div.setAttribute('class', 'tag');
    const span = document.createElement('span');
    span.innerHTML = label;
    const closeBtn = document.createElement('span');
    closeBtn.setAttribute('class','material-symbols-outlined');
    closeBtn.setAttribute('data-item', label);//set attribute just creates a variable on tag, this is allowed and it is handy
    closeBtn.innerHTML = 'close';
    
    div.appendChild(span);
    div.appendChild(closeBtn);
   return div;      
  }

function reset(){
  document.querySelectorAll('.tag').forEach(function(tag){
      tag.parentElement.removeChild(tag);
  })
}
function addTags(){
  reset(); 
  tags.slice().reverse().forEach(function(tag){
      const input = createTag(tag);
      tagContainer.prepend(input);
  })
}

//tagContainer.prepend(createTag('Value1'))
input.addEventListener('keyup', function(e){
 if(e.key === 'Enter'){
    tags.push(input.value);
    addTags();
    input.value='';
 }
})

document.addEventListener('click', function(e){
  if (e.target.innerHTML === 'close'){
      const value = e.target.getAttribute('data-item'); 
      const index = tags.indexOf(value);
      tags = [...tags.slice(0, index), ...tags.slice(index + 1)];
      addTags();
  }
})

document.addEventListener("DOMContentLoaded", function() {
  var button = document.getElementById("tagButton");
  var alert = document.getElementById("tagAlert");
  button.addEventListener("click", function() {
    alert.classList.remove("d-none");
  });
});

const inputField = document.getElementById("tagList");
inputField.addEventListener("keydown", function (event) {
  if (event.key === "Enter") {
    event.preventDefault();
  }
});

function sendTaglist(){
  const url = new URL(window.location.href);
  const occasion_id = url.pathname.split('occasions/').pop();
  // console.log(tags);
  const post_url='/occasions/'+occasion_id+'/tags'
  fetch(post_url, {
method: 'POST',
headers: {
  'Content-Type': 'application/json'
},
body: JSON.stringify(tags)
})
.then(response => {
if (response.ok) {
  // console.log(response)
  return response.json();
}
throw new Error('Network response was not ok.');
})
.then(json => {
console.log('Data sent successfully:', json);
})
.catch(error => {
console.error('Error sending data:', error);
});
}

// function getTaglist(){
  
// }
function getTaglist(){
const url = new URL(window.location.href);
const occasion_id = url.pathname.split('occasions/').pop();
console.log('occ id:'+occasion_id);
  // console.log(tags);
  const get_url='/occasions/'+occasion_id+'/tags'
  console.log('get_url: '+get_url);
  fetch(get_url)
.then(response => {
  if (response.ok) {
    return response.json();
  }
  throw new Error('Network response was not ok.');
})
.then(tagsJSON => {
  // Assign the tags array to a variable
  console.log(tagsJSON[0].tag);
  tags = Array.from(tagsJSON[0].tag);
  console.log('Tags:', tags);
  console.log('Tagstype:', typeof tags);
})
.then(tagsJSON => {
  reset(); 
//var dummy = ['a','b','c']
tags.slice().reverse().forEach(function(tag){
    const input = createTag(tag);
    tagContainer.prepend(input);
})
//tags=tags;
}) 
.catch(error => {
  console.error('Error retrieving tags:', error);
});


// console.log('reload the page');

}
document.addEventListener("DOMContentLoaded", function() {
// Code to be executed when the page is fully loaded
getTaglist();
//dummyLoad();
});

mapboxgl.accessToken = mapToken;
const map = new mapboxgl.Map({
container: 'map', // container ID
style: 'mapbox://styles/mapbox/streets-v12', // style URL
center: occasion.geometry.coordinates, // starting position [lng, lat]
zoom: 10, // starting zoom
});

new mapboxgl.Marker()
  .setLngLat(occasion.geometry.coordinates)
  .setPopup(
      new mapboxgl.Popup({offset: 25})
          .setHTML(
            `<h3>${occasion.title}</h3><p>${occasion.location}</p>`
          )
  )
  .addTo(map)
console.log(occasion.geometry.coordinates);
</script>

   